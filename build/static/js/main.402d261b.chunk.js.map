{"version":3,"sources":["cryptomonedas.png","hooks/useCoin.js","hooks/useCryptoCoin.js","components/Error.js","components/Form.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","SelectOptions","select","useCoin","inicialState","coins","useState","state","updateState","onChange","e","target","value","map","coin","code","name","useCryptoCoin","CoinInfo","Name","FullName","Id","Perror","p","Error","mensaje","Btn","input","Form","saveResult","saveShowResult","saveLoading","cryptoList","saveCryptoList","SelectCoins","cryptoCoin","SelectCrypto","error","saveError","useEffect","a","axios","get","result","data","Data","callApi","onSubmit","preventDefault","url","DISPLAY","APIConsult","setTimeout","type","DivResultado","div","Precio","Resumen","Cotizacion","LOWDAY","PRICE","HIGHDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Container","Imagen","img","Heading","h1","App","component","showResult","loading","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.402d261b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\n    const Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`;\n\nconst SelectOptions = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n`;\n\nconst useCoin = (label, inicialState, coins) => {\n\n    //State del custom hook\n    const [state, updateState] = useState(inicialState);\n\n    const Select = () => (\n        <Fragment>\n            <Label>{label}</Label>\n            <SelectOptions\n                onChange={ e => updateState(e.target.value) }\n                value={state}\n            >\n                <option value=''>- Seleccione -</option>\n                {coins.map(coin => (\n                    <option key={coin.code} value={coin.code}>{coin.name}</option>\n                ))}\n            </SelectOptions>\n        </Fragment>\n    );\n\n    //Se retorna state,interfaz y la fn que modifica el state updateState\n    return [state, Select, updateState];\n}\n \nexport default useCoin;","import React, {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\n    const Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`;\n\nconst SelectOptions = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n    color: #000;\n`;\n\nconst useCryptoCoin = (label, inicialState, coins) => {\n\n    // conins\n    // console.log(coins);\n    \n\n    //State del custom hook\n    const [state, updateState] = useState(inicialState);\n\n    const SelectCrypto = () => (\n        <Fragment>\n            <Label>{label}</Label>\n            <SelectOptions\n                onChange={ e => updateState(e.target.value) }\n                value={state}\n            >\n                <option value=''>- Seleccione -</option>\n                {coins.map(coin => (\n                    <option key={coin.CoinInfo.Id} value={coin.CoinInfo.Name}>{coin.CoinInfo.FullName}</option>\n                ))}\n            </SelectOptions>\n        </Fragment>\n    );\n\n    //Se retorna state,interfaz y la fn que modifica el state updateState\n    return [state, SelectCrypto, updateState];\n}\n \nexport default useCryptoCoin;","import React from 'react'\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types'\n\nconst Perror = styled.p`\n    background-color: #b7322c;\n    padding: 1rem;\n    color: white;\n    font-size: 30px;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    font-family: 'Bebas Neue', cursive;\n`;\n\nconst Error = ({mensaje}) => {\n    return ( \n\n        <Perror>  {mensaje}  </Perror>\n\n     );\n}\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\n \nexport default Error;","import React, {useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types'\n\n//Custom hooks\nimport useCoin from '../hooks/useCoin';\nimport useCryptoCoin from '../hooks/useCryptoCoin';\nimport axios from 'axios';\n\n//Components\nimport Error from './Error'\n\nconst Btn = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: #fff;\n    transition: background-color .3s ease;\n\n    &:hover{\n        background-color: #326ac0;\n        cursor: pointer;\n    }\n`;\n\nconst Form = ({saveResult, saveShowResult, saveLoading}) => {\n\n    //state del listado de criptomonedas\n    const[cryptoList, saveCryptoList] = useState([]);\n    \n    const COINS = [\n        { code: 'USD', name: 'Dolar de Estados Unidos'},\n        { code: 'MXN', name: 'Peso Mexicano'},\n        { code: 'EUR', name: 'Euro'},\n        { code: 'GBP', name: 'Libra Esterlina'}\n    ];\n\n    //utilizamos el custom hook useCoin\n    const [coin, SelectCoins] = useCoin('Elige tu Moneda','', COINS);\n\n    //utilizar custom hook useCryptoCoin\n    const [cryptoCoin, SelectCrypto] = useCryptoCoin('Elige tu Criptomoneda', '', cryptoList);\n\n    //State para el Error\n    const [error, saveError] = useState(false);\n\n    //Ejecutar  llamado a la API\n    useEffect(() => {\n        //se hace la peticion mediante axios\n        const callApi = async () => {\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n\n            const result = await axios.get(url);\n            \n            saveCryptoList(result.data.Data);\n            \n        }\n        callApi();\n        \n    }, [])\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        //Validar\n        if( coin  === '' || cryptoCoin  === '' ){\n            saveError(true);\n            return;\n        }\n        saveError(false);\n\n        //Consultar API\n        const APIConsult = async () => {\n            const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${cryptoCoin}&tsyms=${coin}`;\n\n            const result = await axios.get(url);\n\n            saveResult(result.data.DISPLAY[cryptoCoin][coin]);\n        }\n\n        APIConsult();\n\n        //show spinner\n        saveLoading(true)\n\n        //after 3 sec delete spinner and show the result\n        setTimeout(() => {\n            saveLoading(false);\n            saveShowResult(true);\n            \n        }, 3000);\n\n    }\n    return ( \n            <form\n                onSubmit={handleSubmit}\n            >\n                { error \n                    ? \n                        <Error \n                            mensaje=\"Ambos campos son obligatorios\"\n                        /> \n                    : \n                        null \n                }\n\n                <SelectCoins />\n\n                <SelectCrypto />\n\n                <Btn \n                    type=\"submit\"\n                    value=\"Calcular\"\n                />\n            </form>\n        );\n}\n\nForm.propTypes = {\n    saveResult: PropTypes.func.isRequired,\n    saveShowResult: PropTypes.func.isRequired,\n    saveLoading: PropTypes.func.isRequired\n}\n \nexport default Form;","import React from 'react'\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types'\n\n\nconst DivResultado = styled.div`\n    color: #fff;\n    font-size: 18px!important;\n    font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Precio = styled.p`\n    font-size: 30px!important;\n    /* margin-bottom: 0; */\n    span{\n            font-weight: bold;\n        }\n`;\n\nconst Resumen = styled.p`\n        span{\n            font-weight: bold;\n        }\n`;\n\nconst Cotizacion = ({result}) => {\n\n    const {LOWDAY, PRICE, HIGHDAY, CHANGEPCT24HOUR, LASTUPDATE} = result;\n\n    return ( \n        <DivResultado>\n            <Precio>El precio es: <span>{PRICE}</span> </Precio>\n            {/* <hr></hr> */}\n            <Resumen>\n                El precio mas alto del dia: <span>{HIGHDAY}</span> <br></br>\n                El precio mas bajo del dia: <span>{LOWDAY}</span>  <br></br>\n                Variacion ultimas 24 horas: <span>{CHANGEPCT24HOUR}%</span> <br></br>\n                Ultima actualizacion: <span>{LASTUPDATE}</span>\n            </Resumen>\n\n        </DivResultado>\n     );\n}\n\nCotizacion.propTypes = {\n    result: PropTypes.object.isRequired\n}\n \nexport default Cotizacion;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return ( \n        <div className=\"sk-circle\">\n            <div className=\"sk-circle1 sk-child\"></div>\n            <div className=\"sk-circle2 sk-child\"></div>\n            <div className=\"sk-circle3 sk-child\"></div>\n            <div className=\"sk-circle4 sk-child\"></div>\n            <div className=\"sk-circle5 sk-child\"></div>\n            <div className=\"sk-circle6 sk-child\"></div>\n            <div className=\"sk-circle7 sk-child\"></div>\n            <div className=\"sk-circle8 sk-child\"></div>\n            <div className=\"sk-circle9 sk-child\"></div>\n            <div className=\"sk-circle10 sk-child\"></div>\n            <div className=\"sk-circle11 sk-child\"></div>\n            <div className=\"sk-circle12 sk-child\"></div>\n        </div>\n     );\n}\n \nexport default Spinner;","import React, {useState} from 'react';\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\n\n//componentes\nimport Form from './components/Form'\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner\";\n\n\n\n\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px){\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\nfont-family: 'Bebas Neue', cursive;\ncolor: #fff;\ntext-align: left;\nfont-weight: 700;\nfont-size: 50px;\nmargin-bottom: 50px;\nmargin-top: 80px;\n\n&::after{\n  content: '';\n  width: 100px;\n  height: 6px;\n  background-color: #66A2FE;\n  display: block;\n}\n`;\n\nfunction App() {\n\n  //State para guardar la consulta\n  const [result,saveResult] = useState({});\n  const [showResult, saveShowResult] = useState(false);\n  const [loading, saveLoading] = useState(false);\n\n  let component;\n\n  if(showResult !== false ){\n      component = <Cotizacion \n                    result={result}\n                  />;\n  } else{\n      component = null;\n  }\n\n\n\n  return (\n      <Container>\n        <div>\n          <Imagen \n            src={imagen}\n            alt=\"imagen-crypto\"\n          />\n        </div>\n        <div>\n          <Heading>\n            Cotiza tu criptomoneda al instante\n          </Heading>\n\n          <Form \n            saveResult={saveResult}\n            saveShowResult={saveShowResult}\n            saveLoading={saveLoading}\n          />\n\n          {loading ? \n                <Spinner />\n                        :\n                          null\n        \n          }\n\n          { !loading ?  \n                component\n                : null\n                }\n\n\n        </div>\n        \n\n      </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}